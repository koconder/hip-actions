name: code-quality
description: Runs Code quality checks

inputs:
  wait:
    required: false
    default: true
  coverage_files:
    required: true
  test_execution_report_files:
    required: true
  sonar_server:
    required: true
  sonar_token:
    required: true
  github_token:
    required: true

runs:
  using: "composite"
  steps:
    - name: Download test coverage data
      uses: actions/download-artifact@v2
      with:
        name: coverage
        path: |
          ${{ inputs.coverage_files }}
          ${{ inputs.test_execution_report_files }}

    - uses: FranzDiebold/github-env-vars-action@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: 14.x

    - name: Install Typescript
      run: npm install typescript
      shell: bash

    - name: Setup sonarqube
      uses: warchant/setup-sonar-scanner@v3

    - name: Parse test files
      id: parse-report-files
      run: |
        coverageReportPaths=$(echo ${{ inputs.coverage_files }} | tr "\n" "," | sed -e s/,$//)
        testExecutionReportPaths=$(echo ${{ inputs.test_execution_report_files }} | tr "\n" "," | sed -e s/,$//)
        echo "::set-output name=coverageReportPaths::$( echo $coverageReportPaths )"
        echo "::set-output name=testExecutionReportPaths::$( echo $testExecutionReportPaths )"
      shell: bash

    - name: Run sonarqube
      env:
        # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
        GITHUB_TOKEN: "${{ inputs.GITHUB_TOKEN }}"
      run: |
        sonar-scanner \
            -Dsonar.projectKey="${CI_REPOSITORY_NAME_SLUG}" \
            -Dsonar.host.url="${{ inputs.sonar_server }}" \
            -Dsonar.login="${{ inputs.sonar_token }}" \
            -Dsonar.projectVersion="${GITHUB_SHA}" \
            -Dsonar.links.scm="https://github.com/${GITHUB_REPOSITORY}" \
            -Dsonar.coverageReportPaths="${{ steps.parse-report-files.outputs.coverageReportPaths}}" \
            -Dsonar.testExecutionReportPaths="${{ steps.parse-report-files.outputs.testExecutionReportPaths}}" \
            -Dsonar.sources=.
      shell: bash

    - name: Check quality gate
      uses: sonarsource/sonarqube-quality-gate-action@master
      env:
       SONAR_TOKEN: ${{ inputs.sonar_token }}
      if: ${{ inputs.wait }}
