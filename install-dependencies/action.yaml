name: install-dependencies
description: Install package dependencies and use cache

inputs:
  npm-token:
    description: NPM PAT to use yarn hipagesgroup packages
    required: false
  language:
    description: PHP / Nodejs / Python
    required: true
  version:
    description: Version of the language
    required: true
  cache:
    description: what cache to use (node / yarn / composer / pip)
    required: true
  install:
    description: Application install command ( eg. yarn install / composer install / pip install )
    required: true
  php-tools:
    required: false
    description: PHP tools to be installed when using shivammathur/setup-php
    default: "composer:v1"

runs:
  using: "composite"
  steps:
    ### NodeJS
    - uses: actions/setup-node@v2
      if: ${{ inputs.language == 'node' }}
      id: setup
      with:
        node-version: ${{ inputs.version }}
        cache: ${{ inputs.cache }}

    - run: |
        grep -q @hipagesgroup yarn.lock && echo //npm.pkg.github.com/:_authToken=${{ inputs.npm-token }} >> .npmrc || true
      if: ${{ inputs.language == 'node' && inputs.npm-token }}
      shell: bash

    - run: ${{ inputs.install }}
      if: ${{ inputs.language == 'node' }}
      shell: bash

    ### PHP
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      if: ${{ inputs.language == 'php' }}
      with:
        php-version: ${{ inputs.version }}
        tools: ${{ inputs.php-tools }}

    - name: Get Composer Cache Directory
      if: ${{ inputs.language == 'php' }}
      id: composer-cache-dir
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
      shell: bash

    - uses: actions/cache@v3
      if: ${{ inputs.language == 'php' }}
      id: composer-cache
      with:
        path: |
          **/vendor
          ${{ steps.composer-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - run: ${{ inputs.install }}
      if: steps.composer-cache.outputs.cache-hit != 'true' && ${{ inputs.language == 'php' }}
      shell: bash

    ### Python
    - uses: actions/setup-python@v2
      if: ${{ inputs.language == 'python' }}
      with:
        python-version: ${{ inputs.version }}
        cache: ${{ inputs.cache }}
    - run: ${{ inputs.install }}
      if: ${{ inputs.language == 'python' }}
      shell: bash
