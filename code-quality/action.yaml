name: code-quality
description: Runs Code quality checks

inputs:
  wait:
    description: Wait for quality gate to pass
    default: false
    required: false
  coverage_file:
    description: Code coverage file
    required: true
  sonar_server:
    description: Sonarqube \ SonarCloud server URL
    required: false
  sonar_token:
    description: Sonarqube \ SonarCloud access token
    required: true
  github_token:
    description: Github access token
    required: true
    default: ${{ github.token }}
  coverage_dir:
    description: Directory with code coverage artifacts
    default: ${{ runner.temp }}/_github_workflow/coverage
    required: true

runs:
  using: "composite"
  steps:
    - uses: hipagesgroup/actions/github-env-vars-action@master

    - uses: hipagesgroup/actions/setup-sonarcloud@master
      with:
        sonar_token: ${{ inputs.sonar_token }}

    - name: Download test coverage data
      uses: actions/download-artifact@v2
      with:
        name: coverage
        path: ${{ inputs.coverage_dir }}

    - name: Run fix coverage path
      shell: bash
      working-directory: ${{ inputs.coverage_dir }}
      run: sed -i "s~$GITHUB_WORKSPACE~/github/workspace~g" *

    - uses: actions/cache@v2
      id: sonar-cache
      with:
        path: /opt/sonar-scanner/.sonar/cache
        key: ${{ runner.os }}-sonar-${{ hashFiles('**/sonar-project.properties') }}
        restore-keys: |
          ${{ runner.os }}-sonar-

    - name: Analyze with SonarCloud
      uses: sonarsource/sonarcloud-github-action@master
      with:
        args: >
          -Dsonar.organization=${{ env.CI_REPOSITORY_OWNER_SLUG }}
          -Dsonar.projectKey=${{ env.CI_REPOSITORY_OWNER_SLUG }}_${{ env.CI_REPOSITORY_NAME_SLUG }}
          -Dsonar.projectVersion=${{ env.CI_SHA_SHORT }}
          -Dsonar.links.scm=${{ env.GITHUB_SERVER_URL }}/${{ env.GITHUB_REPOSITORY }}
          -Dsonar.links.ci=${{ env.GITHUB_SERVER_URL }}/${{ env.GITHUB_REPOSITORY }}/actions/runs/${{ env.GITHUB_RUN_ID }}
          -Dsonar.javascript.lcov.reportPaths=${{ inputs.coverage_dir }}/${{ inputs.coverage_file }}
          -Dsonar.sources=.
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        SONAR_TOKEN: ${{ inputs.sonar_token }}
