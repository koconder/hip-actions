name: Build Scan and Publish
description: Build Scan and Publish a container to Container registry

inputs:
  registry:
    # ghcr or ecr
    description: Container registry type ('ecr' or 'ghcr')
    required: true
  registry_url:
    description: Container registry url (eg. ghcr.io)
    required: true

  # ECR settings
  aws-access-key-id:
    description: AWS access key ID
    required: false
  aws-secret-access-key:
    description: AWS secret key
    required: false
  aws-region:
    description: AWS Region
    required: false

  # GHCR token
  github-token:
    description: GITHUB_TOKEN
    required: false
  npm-token:
    description: NPM PAT to use yarn hipagesgroup packages
    required: false

  build-args:
    description: Buildx build-args
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - run: |
        grep -q @hipagesgroup yarn.lock && echo //npm.pkg.github.com/:_authToken=${{ inputs.npm-token }} >> .npmrc || true
      if: ${{ inputs.npm-token}}
      shell: bash

    - name: Log in to Github Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      if: ${{ inputs.registry == 'ghcr' }}
      with:
        registry: ${{ inputs.registry_url }}
        username: hip-ci
        password: ${{ inputs.github-token }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      if: ${{ inputs.registry == 'ecr' }}
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      if: ${{ inputs.registry == 'ecr' }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build, tag, and push image GHCR
      uses: docker/build-push-action@v2
      if: ${{ inputs.registry == 'ghcr' }}
      with:
        context: .
        file: ./Dockerfile
        pull: false
        push: true
        cache-from: type=registry,ref=${{ inputs.registry_url }}/${{ github.repository }}:latest
        cache-to: type=registry,ref=${{ inputs.registry_url }}/${{ github.repository }}:latest,mode=max
        tags: ${{ inputs.registry_url }}/${{ github.repository }}:${{ env.CI_SHA_SHORT }}
        build-args: ${{ inputs.build-args }}

    - name: Build, tag, and push image ECR
      uses: docker/build-push-action@v2
      if: ${{ inputs.registry == 'ecr' }}
      with:
        context: .
        file: ./Dockerfile
        pull: true
        push: true
        cache-from: type=registry,ref=${{ inputs.registry_url }}/${{ github.repository }}:latest
        cache-to: type=inline
        tags: ${{ inputs.registry_url }}/${{ github.repository }}:latest,${{ inputs.registry_url }}/${{ github.repository }}:${{ env.CI_SHA_SHORT }}
        build-args: ${{ inputs.build-args }}
