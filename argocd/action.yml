name: argocd
description: Replace dynamic values and Deploy to argoCD

inputs:
  argocdTimeout:
    description: ArgoCD app creation timeout
    required: false
    default: "300"
  authToken:
    description: ArgoCD auth token
    required: true
  server:
    description: "ArgoCD server domain."
    required: true
  
  manifest_file:
    description: "The manifests to be processed."
    required: true
  dynamic_file:
    description: "Dynamic file to replace environment variables"
    required: false
  branch_file:
    description: "The file for this specific branch"
    required: false
    default: "helm/values.dev.%s.yaml"

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        touch $(printf "${{ inputs.branch_file }}" "${CI_HIPAGES_BRANCH_SLUG:-$CI_ACTION_REF_NAME_SLUG}") || true
        
        ls -la helm/
        
        echo "manifestFile=${{ inputs.manifest_file }}" >> $GITHUB_ENV
        echo "dynamicFile=${{ inputs.dynamic_file }}" >> $GITHUB_ENV

    - name: Replace vars
      run: |
        MANIFEST="${{ env.manifestFile }}"
        DYNAMIC="${{ env.dynamicFile }}"

        echo
        echo "Current ArgoCD file: ${MANIFEST}"
        echo "---"
        cat "${MANIFEST}"

        echo
        echo "Replacing manifest file with variables..."

        tmp="$(mktemp)"

        envsubst < "${MANIFEST}" > "${tmp}"
        cat "${tmp}" > "${MANIFEST}"

        echo
        echo "Argo file after replacement:"
        echo "---"
        cat "${MANIFEST}"

        if [ -s "${DYNAMIC}" ]; then
            tmp="$(mktemp)"

            envsubst < "${DYNAMIC}" > "${tmp}"
            cat "${tmp}" > "${DYNAMIC}"

            echo
            echo "Replacing dynamic files: ${DYNAMIC}"
            echo "---"
            cat "${DYNAMIC}"
        fi
      shell: bash
      
    - uses: actions/upload-artifact@v3
      with:
        name: argocd
        path: |
          ${{ env.manifestFile }}
          ${{ env.dynamicFile }}

    - name: Cache oq
      id: cache-oq
      uses: actions/cache@v2
      with:
        path: /tmp/oq
        key: ${{ runner.os }}-oq

    - name: Download oq
      id: download-oq
      if: steps.cache-oq.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/Blacksmoke16/oq/releases/download/v0.2.1/oq-0.2.1-linux-x86_64 -O /tmp/oq &>> /dev/null && chmod +x /tmp/oq
      shell: bash

    - name: Extract app name
      id: app
      run: |
        app=$(/tmp/oq -r -i yaml .metadata.name ${{ env.manifestFile }})
        echo "::set-output name=appName::$app"
      shell: bash

    - name: Run ArgoCD action
      uses: clowdhaus/argo-cd-action/@main
      with:
        version: 2.1.7
        command: app create -f ${{ env.manifestFile }} --values-literal-file ${{ env.dynamicFile }} --upsert
        options: --grpc-web --server ${{ inputs.server }} --auth-token ${{ inputs.authToken }}

    - name: Run ArgoCD action
      uses: clowdhaus/argo-cd-action/@main
      with:
        version: 2.1.7
        command: app wait ${{ steps.app.outputs.appName }} --timeout ${{ inputs.argocdTimeout }}
        options: --grpc-web --server ${{ inputs.server }} --auth-token ${{ inputs.authToken }}
