name: Run PHP  workflow 

on:
  workflow_call:
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      github_token:
        required: true

jobs:
  dependency-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'
      - name: Get Composer Cache Directory
        id: composer-cache-dir
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        id: composer-cache
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - run: composer self-update && composer install --no-interaction --no-progress --prefer-dist --profile -d $(realpath $(eval echo ${PWD})/hip-shared)
        if: steps.composer-cache.outputs.cache-hit != 'true'
      - run: echo $(composer config cache-files-dir)

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.aws-access-key-id }}
      #     aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
      #     aws-region: "ap-southeast-2"

      # - name: Get AWS password
      #   run: echo "AWS_PASSWORD=$(aws ecr get-login-password --region ap-southeast-2)" >> $GITHUB_ENV

    outputs:
      composer-cache: ${{ steps.composer-cache-dir.outputs.dir }}
  
  run-unit-tests:
    runs-on: ubuntu-latest
    needs: dependency-cache
    container:
      hip:
        image: ghcr.io/hipagesgroup/buildpack-php-builder:7.3
        options: "--entrypoint /bin/bash"
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.github_token }}
        env:
          APPLICATION_ENV: "docker"
          MEMCACHED_HOST: "127.0.0.1:11211"
          dbhost: 127.0.0.1
          dbuser: hip
          dbpass: Lpcn#94K3Mz
          dbname: hip
          dbname_slave_server: hip
          database_central_params_host: 127.0.0.1
          database_central_params_username: hip
          database_central_params_password: Lpcn#94K3Mz
          database_central_params_dbname: central
          dbhost_licensing: 127.0.0.1
          dbuser_licensing: hip
          dbpass_licensing: Lpcn#94K3Mz
          dbname_licensing: license
          dbhost_message_hip: 127.0.0.1
          dbuser_message_hip: hip
          dbpass_message_hip: Lpcn#94K3Mz
          dbname_message_hip: message_hip
          dbhost_slave_server_central: 127.0.0.1
          dbuser_slave_server_central: hip
          dbpass_slave_server_central: Lpcn#94K3Mz
          dbname_slave_server_central: central
    services:
      db:
        image: ghcr.io/hipagesgroup/db-hip:master
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.github_token }}
        ports:
          - 3306:3306
      memcache:
        ports:
          - 11211:11211
        image: memcached
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: jobs.dependency-cache.outputs.composer-cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - run: php -v
      - run: echo $(composer config cache-files-dir)
      - run: composer self-update && composer install --no-interaction --no-progress --prefer-dist --profile -d $(realpath $(eval echo ${PWD})/hip-shared)
      - run: hip-shared/vendor/bin/paratest --runner Runner \
              --configuration=hip-shared/tests/phpunit.xml \
              --coverage-php=/tmp/coverage/Unit.cov \
              --testsuite=Unit,TransactionalIntegrationTests \
              --verbose=1 -p 8
      - uses: actions/upload-artifact@v2
        with:
          name: unit-coverage
          path: /tmp/coverage/Unit.cov
    
    

  run-integration-tests:
    runs-on: ubuntu-latest
    needs: dependency-cache
    container:
      hip:
        image: ghcr.io/hipagesgroup/buildpack-php-builder:7.3
        options: "--entrypoint /bin/bash"
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.github_token }}
        env:
          APPLICATION_ENV: "docker"
          MEMCACHED_HOST: "127.0.0.1:11211"
          dbhost: 127.0.0.1
          dbuser: hip
          dbpass: Lpcn#94K3Mz
          dbname: hip
          dbname_slave_server: hip
          database_central_params_host: 127.0.0.1
          database_central_params_username: hip
          database_central_params_password: Lpcn#94K3Mz
          database_central_params_dbname: central
          dbhost_licensing: 127.0.0.1
          dbuser_licensing: hip
          dbpass_licensing: Lpcn#94K3Mz
          dbname_licensing: license
          dbhost_message_hip: 127.0.0.1
          dbuser_message_hip: hip
          dbpass_message_hip: Lpcn#94K3Mz
          dbname_message_hip: message_hip
          dbhost_slave_server_central: 127.0.0.1
          dbuser_slave_server_central: hip
          dbpass_slave_server_central: Lpcn#94K3Mz
          dbname_slave_server_central: central
    services:
      db:
        image: ghcr.io/hipagesgroup/db-hip:master
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.github_token }}
        ports:
          - 3306:3306
      memcache:
        ports:
          - 11211:11211
        image: memcached
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: jobs.dependency-cache.outputs.composer-cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - run: php -v
      - run: composer self-update && composer install --no-interaction --no-progress --prefer-dist --profile -d $(realpath $(eval echo ${PWD})/hip-shared)
      - run: hip-shared/vendor/bin/phpunit \
              --configuration=hip-shared/tests/phpunit.xml \
              --coverage-php=/tmp/coverage/Integration.cov \
              --testsuite=Integration

      - uses: actions/upload-artifact@v2
        with:
          name: integ-coverage
          path: /tmp/coverage/Integration.cov

    


      # - name: Download math result for job 1
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: unit-coverage

  # run-unit-test:
  #   runs-on: ubuntu-latest
  #   needs: dependency-cache
  #   name: Run unit tests
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - uses: actions/cache@v2
  #       with:
  #         path: ${{ jobs.dependency-cache.steps.composer-cache.outputs.dir }}
  #         key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      